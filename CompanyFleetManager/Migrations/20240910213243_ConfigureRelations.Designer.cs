// <auto-generated />
using System;
using CompanyFleetManager;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompanyFleetManager.Migrations
{
    [DbContext(typeof(FleetDatabaseContext))]
    [Migration("20240910213243_ConfigureRelations")]
    partial class ConfigureRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("CompanyFleetManager.Models.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DrivingLicenseCategories")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DrivingLicenseValidity")
                        .HasColumnType("TEXT");

                    b.Property<string>("Forename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("HiredUntil")
                        .HasColumnType("TEXT");

                    b.Property<string>("Middlename")
                        .HasColumnType("TEXT");

                    b.Property<long>("NationalIdentityNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PrivatePhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkPhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CompanyFleetManager.Models.Entities.Rental", b =>
                {
                    b.Property<int>("RentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("FactualReturningDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PlannedReturningDate")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("RentalDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("RentedVehicleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RentingEmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RentingVehicleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RentalId");

                    b.HasIndex("RentedVehicleId");

                    b.HasIndex("RentingEmployeeId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("CompanyFleetManager.Models.Entities.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDamaged")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LicencePlateNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Mileage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductionYear")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("VehicleInspectionValidity")
                        .HasColumnType("TEXT");

                    b.HasKey("VehicleId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("CompanyFleetManager.Models.Entities.Rental", b =>
                {
                    b.HasOne("CompanyFleetManager.Models.Entities.Vehicle", "RentedVehicle")
                        .WithMany("Rentals")
                        .HasForeignKey("RentedVehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyFleetManager.Models.Entities.Employee", "RentingEmployee")
                        .WithMany("Rentals")
                        .HasForeignKey("RentingEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RentedVehicle");

                    b.Navigation("RentingEmployee");
                });

            modelBuilder.Entity("CompanyFleetManager.Models.Entities.Employee", b =>
                {
                    b.Navigation("Rentals");
                });

            modelBuilder.Entity("CompanyFleetManager.Models.Entities.Vehicle", b =>
                {
                    b.Navigation("Rentals");
                });
#pragma warning restore 612, 618
        }
    }
}
